rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Default rule - deny access
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // Product images - anyone can view, only admins can modify
    match /products/{productId}/{allImages=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Category images - anyone can view, only admins can modify
    match /categories/{categoryId}/{allImages=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // User profile images - only the owner can view and modify
    match /profiles/{userId}/{allImages=**} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Public assets - anyone can view
    match /public/{allAssets=**} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Order attachments - owner and admin access
    match /orders/{orderId}/{allAttachments=**} {
      allow read: if request.auth != null && (
                   // Check if the user owns this order (validation in a separate function)
                   exists(/databases/$(database)/documents/orders/$(orderId)) &&
                   get(/databases/$(database)/documents/orders/$(orderId)).data.userId == request.auth.uid ||
                   request.auth.token.admin == true
                 );
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
  }
} 